"""Add ServiceLimit model for granular limits

Revision ID: 087f474f6149
Revises: 60d88e50cfd1
Create Date: 2025-08-07 00:10:14.922873

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '087f474f6149'
down_revision: Union[str, Sequence[str], None] = '60d88e50cfd1'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('providers', 'daily_limit',
               existing_type=sa.INTEGER(),
               comment='Total daily limit for provider across all services/countries',
               existing_nullable=True)
    op.drop_index(op.f('ix_service_limits_country_id'), table_name='service_limits')
    op.drop_index(op.f('ix_service_limits_is_active'), table_name='service_limits')
    op.drop_index(op.f('ix_service_limits_provider_id'), table_name='service_limits')
    op.drop_index(op.f('ix_service_limits_service_id'), table_name='service_limits')
    op.drop_index(op.f('unique_service_provider_country'), table_name='service_limits')
    op.create_unique_constraint('_service_provider_country_uc', 'service_limits', ['service_id', 'provider_id', 'country_id'])
    op.create_index('ix_service_limit_lookup', 'service_limits', ['service_id', 'provider_id', 'country_id'], unique=False)
    op.drop_column('service_limits', 'created_at')
    op.drop_column('service_limits', 'is_active')
    op.alter_column('services', 'daily_limit',
               existing_type=sa.INTEGER(),
               comment='Default daily limit if no specific rule applies',
               existing_nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('services', 'daily_limit',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='Default daily limit if no specific rule applies',
               existing_nullable=True)
    op.add_column('service_limits', sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.add_column('service_limits', sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True))
    op.drop_index('ix_service_limit_lookup', table_name='service_limits')
    op.drop_constraint('_service_provider_country_uc', 'service_limits', type_='unique')
    op.create_index(op.f('unique_service_provider_country'), 'service_limits', ['service_id', 'provider_id', 'country_id'], unique=True)
    op.create_index(op.f('ix_service_limits_service_id'), 'service_limits', ['service_id'], unique=False)
    op.create_index(op.f('ix_service_limits_provider_id'), 'service_limits', ['provider_id'], unique=False)
    op.create_index(op.f('ix_service_limits_is_active'), 'service_limits', ['is_active'], unique=False)
    op.create_index(op.f('ix_service_limits_country_id'), 'service_limits', ['country_id'], unique=False)
    op.alter_column('providers', 'daily_limit',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='Total daily limit for provider across all services/countries',
               existing_nullable=True)
    # ### end Alembic commands ###
