"""add_gin_index_for_text_search_on_phone_numbers

Revision ID: 42fbf50db234
Revises: b8306f9d9b18
Create Date: 2025-08-30 20:35:25.468869

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '42fbf50db234'
down_revision: Union[str, Sequence[str], None] = 'b8306f9d9b18'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('idx_orphan_filters'), table_name='orphan_sms')
    op.drop_index(op.f('idx_orphan_phone'), table_name='orphan_sms')
    op.drop_index(op.f('idx_orphan_received'), table_name='orphan_sms')
    op.drop_index(op.f('idx_orphan_sender'), table_name='orphan_sms')
    op.drop_index(op.f('idx_orphan_sms_grp_phone'), table_name='orphan_sms')
    op.drop_index(op.f('idx_orphan_sms_grp_rcv'), table_name='orphan_sms')
    op.drop_index(op.f('ix_orphan_sms_range'), table_name='orphan_sms', postgresql_include=['phone_number_str', 'text'])
    op.drop_index(op.f('ix_orphan_sms_reporting'), table_name='orphan_sms')
    op.drop_index(op.f('idx_pn_free_c_op_p_id'), table_name='phone_numbers', postgresql_where='((is_active IS TRUE) AND (is_in_use IS FALSE))')
    op.drop_index(op.f('idx_pn_free_c_p_id'), table_name='phone_numbers', postgresql_where='((is_active IS TRUE) AND (is_in_use IS FALSE))')
    op.drop_index(op.f('idx_pn_number_str_prefix'), table_name='phone_numbers', postgresql_ops={'number_str': 'text_pattern_ops'})
    op.drop_index(op.f('ix_phone_number_lookup'), table_name='phone_numbers')
    op.drop_index(op.f('ix_pn_country_free_active'), table_name='phone_numbers', postgresql_where='((is_active IS TRUE) AND (is_in_use IS FALSE))')
    op.drop_index(op.f('ix_pn_lookup_final_no_op'), table_name='phone_numbers', postgresql_where='((is_active IS TRUE) AND (is_in_use IS FALSE))')
    op.drop_index(op.f('ix_pn_lookup_final_no_op_v2'), table_name='phone_numbers', postgresql_where='((is_active IS TRUE) AND (is_in_use IS FALSE))', postgresql_include=['id'])
    op.drop_index(op.f('ix_pn_lookup_final_with_op'), table_name='phone_numbers', postgresql_where='((is_active IS TRUE) AND (is_in_use IS FALSE))')
    op.drop_index(op.f('ix_pn_lookup_final_with_op_v2'), table_name='phone_numbers', postgresql_where='((is_active IS TRUE) AND (is_in_use IS FALSE))', postgresql_include=['id'])
    op.create_index('ix_phone_numbers_number_str_gin', 'phone_numbers', ['number_str'], unique=False, postgresql_using='gin', postgresql_ops={'number_str': 'gin_trgm_ops'})
    op.drop_index(op.f('idx_sessions_phone_number_id'), table_name='sessions')
    op.drop_index(op.f('idx_sessions_service_id'), table_name='sessions')
    op.drop_index(op.f('idx_sessions_status_created_at'), table_name='sessions')
    op.drop_index(op.f('idx_sms_received'), table_name='sms_messages')
    op.drop_index(op.f('idx_sms_session_received'), table_name='sms_messages')
    op.drop_index(op.f('ix_sms_messages_received_at_session'), table_name='sms_messages')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index(op.f('ix_sms_messages_received_at_session'), 'sms_messages', ['received_at', 'session_id'], unique=False)
    op.create_index(op.f('idx_sms_session_received'), 'sms_messages', ['session_id', sa.literal_column('received_at DESC')], unique=False)
    op.create_index(op.f('idx_sms_received'), 'sms_messages', ['received_at'], unique=False)
    op.create_index(op.f('idx_sessions_status_created_at'), 'sessions', ['status', 'created_at'], unique=False)
    op.create_index(op.f('idx_sessions_service_id'), 'sessions', ['service_id'], unique=False)
    op.create_index(op.f('idx_sessions_phone_number_id'), 'sessions', ['phone_number_id'], unique=False)
    op.drop_index('ix_phone_numbers_number_str_gin', table_name='phone_numbers', postgresql_using='gin', postgresql_ops={'number_str': 'gin_trgm_ops'})
    op.create_index(op.f('ix_pn_lookup_final_with_op_v2'), 'phone_numbers', ['country_id', 'operator_id', 'provider_id', 'sort_order'], unique=False, postgresql_where='((is_active IS TRUE) AND (is_in_use IS FALSE))', postgresql_include=['id'])
    op.create_index(op.f('ix_pn_lookup_final_with_op'), 'phone_numbers', ['country_id', 'operator_id', 'provider_id', 'sort_order'], unique=False, postgresql_where='((is_active IS TRUE) AND (is_in_use IS FALSE))')
    op.create_index(op.f('ix_pn_lookup_final_no_op_v2'), 'phone_numbers', ['country_id', 'provider_id', 'sort_order'], unique=False, postgresql_where='((is_active IS TRUE) AND (is_in_use IS FALSE))', postgresql_include=['id'])
    op.create_index(op.f('ix_pn_lookup_final_no_op'), 'phone_numbers', ['country_id', 'provider_id', 'sort_order'], unique=False, postgresql_where='((is_active IS TRUE) AND (is_in_use IS FALSE))')
    op.create_index(op.f('ix_pn_country_free_active'), 'phone_numbers', ['country_id'], unique=False, postgresql_where='((is_active IS TRUE) AND (is_in_use IS FALSE))')
    op.create_index(op.f('ix_phone_number_lookup'), 'phone_numbers', ['provider_id', 'country_id', 'is_active', 'is_in_use', 'sort_order'], unique=False)
    op.create_index(op.f('idx_pn_number_str_prefix'), 'phone_numbers', ['number_str'], unique=False, postgresql_ops={'number_str': 'text_pattern_ops'})
    op.create_index(op.f('idx_pn_free_c_p_id'), 'phone_numbers', ['country_id', 'provider_id', 'id'], unique=False, postgresql_where='((is_active IS TRUE) AND (is_in_use IS FALSE))')
    op.create_index(op.f('idx_pn_free_c_op_p_id'), 'phone_numbers', ['country_id', 'operator_id', 'provider_id', 'id'], unique=False, postgresql_where='((is_active IS TRUE) AND (is_in_use IS FALSE))')
    op.create_index(op.f('ix_orphan_sms_reporting'), 'orphan_sms', [sa.literal_column('received_at DESC'), 'source_addr', 'provider_id', 'country_id', 'operator_id'], unique=False)
    op.create_index(op.f('ix_orphan_sms_range'), 'orphan_sms', ['received_at', 'provider_id', 'country_id', 'operator_id', 'source_addr'], unique=False, postgresql_include=['phone_number_str', 'text'])
    op.create_index(op.f('idx_orphan_sms_grp_rcv'), 'orphan_sms', ['provider_id', 'country_id', 'operator_id', 'source_addr', 'received_at'], unique=False)
    op.create_index(op.f('idx_orphan_sms_grp_phone'), 'orphan_sms', ['provider_id', 'country_id', 'operator_id', 'source_addr', 'phone_number_str'], unique=False)
    op.create_index(op.f('idx_orphan_sender'), 'orphan_sms', ['source_addr'], unique=False)
    op.create_index(op.f('idx_orphan_received'), 'orphan_sms', ['received_at'], unique=False)
    op.create_index(op.f('idx_orphan_phone'), 'orphan_sms', ['phone_number_str'], unique=False)
    op.create_index(op.f('idx_orphan_filters'), 'orphan_sms', ['provider_id', 'country_id', 'operator_id', 'received_at'], unique=False)
    # ### end Alembic commands ###
